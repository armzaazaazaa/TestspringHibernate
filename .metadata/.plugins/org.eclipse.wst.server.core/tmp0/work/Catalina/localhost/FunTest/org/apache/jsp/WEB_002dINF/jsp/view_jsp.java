/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.14
 * Generated at: 2018-12-24 10:27:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import Model.*;
import java.text.*;

public final class view_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("Model");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
 Users userlogins = (Users)
session.getAttribute("userlogins"); Users userview =
(Users)session.getAttribute("userview"); 
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("\t<!-- global -->\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css/global/bootstrap.min.css\" />\n");
      out.write("\t<script type=\"text/javascript\" src=\"js/global/jquery-3.3.1.slim.min.js\"></script>\n");
      out.write("\n");
      out.write("\t<script type=\"text/javascript\" src=\"js/global/jquery-3.3.1.slim.min.js\"></script>\n");
      out.write("\n");
      out.write("\t<script type=\"text/javascript\" src=\"js/global/bootstrap.min.js\"></script>\n");
      out.write("\t<script type=\"text/javascript\" src=\"js/global/popper.min.js\"></script>\n");
      out.write("\t<!-- global -->\n");
      out.write("\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css/from.css\" />\n");
      out.write("\t<script type=\"text/javascript\" src=\"js/fromjs.js\"></script>\n");
      out.write("\t<script type=\"text/javascript\" src=\"js/view.js\"></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t<meta charset=\"UTF-8\" />\n");
      out.write("\t<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body align=\"center\">\n");
      out.write("\t<div class=\"container\">\n");
      out.write("\t\t<nav class=\"navbar navbar-light bg-light\">\n");
      out.write("\t\t\t<a class=\"navbar-brand\" href=\"#\">\n");
      out.write("\t\t\t\t");
      out.print(userlogins.getEmail());
      out.write("</a>\n");
      out.write("\n");
      out.write("\t\t\t<form id=\"logout\" action=\"logout\" method=\"post\">\n");
      out.write("\t\t\t\t<button type=\"submit\" class=\"btn btn-danger\">logout</button>\n");
      out.write("\t\t\t</form>\n");
      out.write("\t\t</nav>\n");
      out.write("\n");
      out.write("\t\t<br />\n");
      out.write("\t\t<br />\n");
      out.write("\t\t<br />\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t");
      out.print(userview.getEmail() );
      out.write(" <br />\n");
      out.write("\t\t");
      out.print(userview.getPasswort() );
      out.write("<br />\n");
      out.write("\t\t");
      out.print(userview.getId() );
      out.write("\n");
      out.write("\n");
      out.write("\t\t<br><br><br>\n");
      out.write("\n");
      out.write("\t\t<hr>\n");
      out.write("\n");
      out.write("\t\t<form id=\"form1\" action=\"uploaddatauser\" method=\"post\" enctype='multipart/form-data' accept-charset=\"UTF-8\">\n");
      out.write("\n");
      out.write("\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t<label for=\"exampleInputPassword1\">assdress</label>\n");
      out.write("\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"assdress\" name=\"address\">\n");
      out.write("\t\t\t\t<input type=\"hidden\" id=\"iduser\" name=\"iduser\" value=\"");
      out.print(userview.getId());
      out.write("\">\n");
      out.write("\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t<label for=\"exampleInputEmail1\">image</label>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t\t<input type=\"file\" id=\"imgInp\" name=\"image\" class=\"file_input\" multiple />\n");
      out.write("\t\t\t\t<div id=\"result\" class=\"uploadPreview\">\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t\t<button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n");
      out.write("\t\t</form>\n");
      out.write("\n");
      out.write("\t\t<hr>\n");
      out.write("\t\t<div id='TextBoxesGroups'>\n");
      out.write("\t\t\t<div id=\"wrapper1\">\n");
      out.write("\t\t\t\t<label>Image 1 : </label><input id=\"imgfile1\" type=\"file\" name=\"imgfile1\" accept=\"image/*\" onchange=\"preview_image(event) \"\n");
      out.write("\t\t\t\t multiple>\n");
      out.write("\t\t\t\t<img class=\"output_imagepwe\" id=\"output_image1\">\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t<input type='button' value='Add Image' id='addButtons'>\n");
      out.write("\t\t<input type='button' value='Remove Image' id='removeButtons'>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t</div>\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>\n");
      out.write("<style>\n");
      out.write("\t.output_imagepwe\n");
      out.write("  {\n");
      out.write("   max-width:100px;\n");
      out.write("  }\n");
      out.write(" </style>\n");
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\tfunction preview_image(event) {\n");
      out.write("\t\t//console.log(event);\n");
      out.write("\t\tvar reader = new FileReader();\n");
      out.write("\t\treader.onload = function () {\n");
      out.write("\t\t\tvar output = document.getElementById('output_image1');\n");
      out.write("\t\t\toutput.src = reader.result;\n");
      out.write("\t\t}\n");
      out.write("\t\treader.readAsDataURL(event.target.files[0]);\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\tfunction testpreviewimg(event, conter) {\n");
      out.write("\t\t//console.log(conter);\n");
      out.write("\t\tvar reader = new FileReader();\n");
      out.write("\t\treader.onload = function () {\n");
      out.write("\t\t\tvar output = document.getElementById('output_image' + conter);\n");
      out.write("\t\t\toutput.src = reader.result;\n");
      out.write("\t\t}\n");
      out.write("\t\treader.readAsDataURL(event.target.files[0]);\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\tvar counters = 2;\n");
      out.write("\n");
      out.write("\t$(\"#addButtons\").click(function () {\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\tvar newTextBoxDivs = $(document.createElement('div'))\n");
      out.write("\t\t\t.attr(\"id\", 'wrapper' + counters);\n");
      out.write("\n");
      out.write("\t\tnewTextBoxDivs.html(\n");
      out.write("\t\t\t'<label>Image' + counters + ' : </label>'\n");
      out.write("\t\t\t+ '<input type=\"file\" name=\"imgfile' + counters + '\" id=\"imgfile' + counters + '\"accept= image/* onchange=\"testpreviewimg(event,' + counters + ')\"multiple>'\n");
      out.write("\t\t\t+ '<img id=\"output_image' + counters + '\" class=\"output_imagepwe\">' + '');\n");
      out.write("\n");
      out.write("\t\tnewTextBoxDivs.appendTo(\"#TextBoxesGroups\");\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\tcounters++;\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\t$(\"#removeButtons\").click(function () {\n");
      out.write("\t\tif (counters == 1) {\n");
      out.write("\t\t\talert(\"No more textbox to remove\");\n");
      out.write("\t\t\treturn false;\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\tcounters--;\n");
      out.write("\n");
      out.write("\t\t$(\"#wrapper\" + counters).remove();\n");
      out.write("\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\twindow.onload = function () {\n");
      out.write("\t\tif (window.File && window.FileList && window.FileReader) {\n");
      out.write("\t\t\tvar filesInput = document.getElementById(\"imgInp\");\n");
      out.write("\t\t\tfilesInput.addEventListener(\"change\", function (event) {\n");
      out.write("\t\t\t\tvar files = event.target.files;\n");
      out.write("\t\t\t\tvar output = document.getElementById(\"result\");\n");
      out.write("\t\t\t\tfor (var i = 0; i < files.length; i++) {\n");
      out.write("\t\t\t\t\tvar file = files[i];\n");
      out.write("\t\t\t\t\tif (!file.type.match('image'))\n");
      out.write("\t\t\t\t\t\tcontinue;\n");
      out.write("\t\t\t\t\tvar picReader = new FileReader();\n");
      out.write("\t\t\t\t\tpicReader.addEventListener(\"load\", function (event) {\n");
      out.write("\t\t\t\t\t\tvar picFile = event.target;\n");
      out.write("\t\t\t\t\t\tvar div = document.createElement(\"div\");\n");
      out.write("\t\t\t\t\t\tdiv.innerHTML = \"<img class='thumbnail' src='\" + picFile.result + \"'\" +\n");
      out.write("\t\t\t\t\t\t\t\"title='\" + picFile.name + \"'/>\";\n");
      out.write("\t\t\t\t\t\toutput.insertBefore(div, null);\n");
      out.write("\t\t\t\t\t});\n");
      out.write("\t\t\t\t\tpicReader.readAsDataURL(file);\n");
      out.write("\t\t\t\t}\n");
      out.write("\n");
      out.write("\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t/* \tfunction readURL(input) {\n");
      out.write("\n");
      out.write("\t\t\tif (input.files && input.files[0]) {\n");
      out.write("\t\t\t\tvar reader = new FileReader();\n");
      out.write("\n");
      out.write("\t\t\t\treader.onload = function (e) {\n");
      out.write("\t\t\t\t\t$('#blah').attr('src', e.target.result);\n");
      out.write("\t\t\t\t}\n");
      out.write("\n");
      out.write("\t\t\t\treader.readAsDataURL(input.files[0]);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\t$(\"#imgInp\").change(function () {\n");
      out.write("\t\t\treadURL(this);\n");
      out.write("\t\t}); */\n");
      out.write("\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("<!--\n");
      out.write("\n");
      out.write("//-->\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
